{"version":3,"sources":["styles/Auth.module.css","pages/Profile/Profile.module.css","components/Header/Navbar/Navbar.module.css","components/Header/Header.module.css","helpers/auth.js","helpers/validation.js","components/Login/Login.js","components/PrivateRoute/PrivateRoute.js","pages/Home/Home.js","pages/Profile/Profile.js","components/Register/Register.js","components/Header/Navbar/Navbar.js","components/Header/AuthStatus/AuthStatus.js","components/Header/Header.js","helpers/toastrSettings.js","components/ForgotPassword/ForgotPassword.js","components/ChangePassword/ChangePassword.js","App.js","serviceWorker.js","index.js","components/Header/AuthStatus/AuthStatus.module.css"],"names":["module","exports","auth","isAuthenticated","username","undefined","authenticate","this","signout","checkAuth","token","config","a","bodyData","options","method","uri","body","json","request","response","console","log","login","password","recoverOrResendValidation","usernameOrEmail","register","email","repeatPassword","changePassword","user","validateForm","formElements","form","showNoError","formIsValid","forEach","input","validateInputValue","type","val","showError","value","length","test","querySelector","classList","add","previousSibling","lastChild","Login","props","formEl","useRef","submitButton","history","location","useLocation","useState","redirectToReferrer","setRedirectToReferrer","setUsername","setPassword","infoShown","setInfoShown","loadingButton","setLoadingButton","useEffect","searchParams","URLSearchParams","search","activated","get","expired","toastr","info","error","isUuid","success","handleSubmit","e","preventDefault","areThereErrors","current","disabled","handleLogin","target","res","status","localStorage","setItem","handleServerErrors","code","showServerErrors","invalids","invalidInputs","el","element","classes","hasOwnProperty","capitalize","join","message","name","charAt","toUpperCase","slice","handleChange","newValue","updateInputState","validateInput","showValidButton","isValid","showValidationInput","remove","nextSibling","valid","validInputs","allValidEl","Array","from","querySelectorAll","filter","indexOf","formButtonClasses","newEl","handleSwitchPage","path","push","animation","state","pathname","to","className","Wrapper","onSubmit","ref","htmlFor","id","autoComplete","onChange","onKeyPress","key","maxLength","placeholder","btn","size","color","onClick","PrivateRoute","Component","component","rest","render","Home","Profile","useHistory","loggedUser","setLoggedUser","getItem","fetchAuth","Loading","Register","setEmail","rePassword","setRePassword","handleRegistration","isFormValid","isRepeatPasswordValid","byPassValidationForPasswords","pass","rePass","rePassInput","Navbar","AuthStatus","withRouter","userUsername","window","innerWidth","document","documentElement","clientWidth","removeItem","Header","toastrSettings","ForgotPassword","handleRecover","timeOut","ChangePassword","userToHandle","setUserToHandle","App","toastrSetup","exact","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bebf9e34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Auth_Wrapper__9yUxc\",\"auth-main\":\"Auth_auth-main__2csK1\",\"page-name\":\"Auth_page-name__3njLk\",\"recover\":\"Auth_recover__nTK9A\",\"error\":\"Auth_error__eMmIG\",\"verification\":\"Auth_verification__nYOob\",\"valid\":\"Auth_valid__1JlkT\",\"btn\":\"Auth_btn__1H9J6\",\"auth-switch-page\":\"Auth_auth-switch-page__2g0hL\",\"register\":\"Auth_register__3eK3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Profile_Loading__1KkBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__YkdC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","import request from 'request-promise';\n\nconst auth = {\n    isAuthenticated: false,\n    username: undefined,\n    authenticate(username) {\n      this.isAuthenticated = true\n      this.username = username\n    },\n    signout() {\n      this.isAuthenticated = false\n      this.username = undefined\n    }\n}\n\nexport const checkAuth = async(token, config) => {\n  try {\n      let bodyData = { token };\n      if(config) bodyData.options = config;\n      const options = {\n          method: 'POST',\n          uri: 'http://127.0.0.1:9090/users/checkauth',\n          body: bodyData,\n          json: true \n      };\n      const response = await request(options);\n      return response;\n  }\n  catch(err) {\n      return console.log('Server under maintanence!', err);\n  }\n};\n\nexport const login = async(username, password) => {\n  try {\n      const options = {\n          method: 'POST',\n          uri: 'http://127.0.0.1:9090/users/login',\n          body: [ username, password ],\n          json: true \n      };\n      const response = await request(options);\n      return response;\n  }\n  catch(err) {\n      return console.log('Server under maintanence!', err);\n  }\n};\n\nexport const recoverOrResendValidation = async(usernameOrEmail) => {\n  try {\n    const options = {\n        method: 'POST',\n        uri: 'http://127.0.0.1:9090/users/recover',\n        body: [ usernameOrEmail ],\n        json: true \n    };\n    const response = await request(options);\n    return response;\n  }\n  catch(err) {\n      return console.log('Server under maintanence!', err);\n  }\n};\n\nexport const register = async(username, password, email, repeatPassword) => {\n  try {\n      const options = {\n          method: 'POST',\n          uri: 'http://127.0.0.1:9090/users/register',\n          body: [ username, password, email, repeatPassword],\n          json: true \n      };\n      const response = await request(options);\n      return response;\n  }\n  catch(err) {\n      return console.log('Server under maintanence!', err);\n  }\n};\n\nexport const changePassword = async(password, repeatPassword, user) => {\n  try {\n      const options = {\n          method: 'POST',\n          uri: 'http://127.0.0.1:9090/users/resetpass',\n          body: [ password, repeatPassword, user],\n          json: true \n      };\n      const response = await request(options);\n      return response;\n  }\n  catch(err) {\n      return console.log('Server under maintanence!', err);\n  }\n};\n\nexport default auth;","export const validateForm = (formElements, form, showNoError) => {\n    let formIsValid = true;\n    formElements.forEach(input => {\n        if(!validateInputValue(input.type, input.val)) {\n            formIsValid = false;\n            if(!showNoError) showError(input.type, form);\n        }\n    });\n    return formIsValid ? true : false;\n}\n\nexport const validateInputValue = (type, value) => {\n    switch (type) {\n        case 'username':\n            return value.length >= 6 && value.length <= 50 && /^[a-zA-Z0-9_.-@]*$/.test(value);\n        case 'password':\n            return value.length >= 6 && value.length <= 50;\n        case 'email':\n            return /@.+\\.[A-Za-z]{2,}$/.test(value);\n        default:\n            console.log(`Validation failed! No validation for ${type}!`);\n        break;\n    }\n}\n\nconst showError = (type, form) => {\n    form.querySelector(`#${type}`).classList.add('error');\n    form.querySelector(`#${type}`).previousSibling.lastChild.classList.add('error');\n}","import React, { useState, useRef, useEffect } from 'react';\nimport auth, { login } from '../../helpers/auth';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport classes from '../../styles/Auth.module.css';\nimport '../../styles/toastr.css';\nimport toastr from 'toastr';\nimport { validateForm, validateInputValue } from '../../helpers/validation';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { isUuid } from 'uuidv4';\n\nconst Login = props => {\n    const formEl = useRef(null);\n    const submitButton = useRef(null);\n    const { history } = props;\n    const location = useLocation();\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [username, setUsername] = useState({ type: 'username', val: '' });\n    const [password, setPassword] = useState({ type: 'password', val: '' });\n    const [infoShown, setInfoShown] = useState(false);\n    const [loadingButton, setLoadingButton] = useState(false);\n\n    useEffect(() => {\n        const searchParams = new URLSearchParams(location.search);\n        const activated = searchParams.get('activated');\n        const expired = searchParams.get('expired');\n        if(activated && activated === 'true') toastr.info('You can login into your account', 'Your account was already activated!');   \n        if(activated && activated === 'false') toastr.error('You must have clicken on a wrong link', 'Your link seems to be broken!');   \n        if(isUuid(activated)) toastr.success('You can now login into your account', 'Your account is now activated!');   \n        if(expired && expired === 'true') toastr.error('Please try again', 'Your link is already expired!');  \n    }, [location]);\n  \n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        let areThereErrors = false;\n        \n        submitButton.current.disabled = true;\n        setLoadingButton(true);\n        areThereErrors = await handleLogin(e);\n        submitButton.current.disabled = false;\n        setLoadingButton(false);\n        \n        if(!areThereErrors) {\n            auth.authenticate(username.val);\n            setRedirectToReferrer(true);\n        }\n    }\n\n    const handleLogin = async(e) => {\n        const isFormValid = validateForm([username, password], e.target);\n        if(isFormValid) {\n            const res = await login(username, password);\n            if(res.status === 1) {\n                localStorage.setItem('userToken', res.token);\n                toastr.success('You are now logged in!');\n                return false;\n            } else {\n                handleServerErrors(res);\n                return true;\n            } \n        } else return true;\n    }\n\n    const handleServerErrors = res => {\n        if(res.code === 11) showServerErrors(res.invalids, res); // REGISTRATION / LOGIN - Validation failed!\n            else if(res.code === 15) showServerErrors(['username'], res); // LOGIN - Incorrect username!\n            else if(res.code === 16) showServerErrors(['password'], res); // LOGIN - Incorrect pass!\n            else if(res.code === 17) showServerErrors(['activate'], res); // LOGIN - Incorrect pass!\n            else showServerErrors([], res); // REGISTER/LOGIN - General server error - Something went wrong!\n    }\n\n    const showServerErrors = (invalidInputs, res) => {\n        if(invalidInputs[0] === 'activate') return toastr.info('Please activate your account first!');\n        if( invalidInputs.length === 0 ) return toastr.error('Please try again!', 'Something went wrong!'); // ADD TOASTR FOR GENERAL ERROR - SMTH WENT WRONG\n        invalidInputs.forEach(el => {\n            const element = formEl.current.querySelector(`#${el}`);\n            element.classList.add(classes.error);\n            element.previousSibling.lastChild.classList.add(classes.error);\n        });\n\n        // Adding messages to toastr\n        if(res.hasOwnProperty('invalids')) toastr.error(`${capitalize(invalidInputs.join(', '))} are not valid!`);\n            else toastr.error(capitalize(res.message));\n            \n    }\n\n    const capitalize = name => {\n        return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n\n    const handleChange = e => {\n        const { name: type, value: newValue } = e.target;\n        updateInputState(type, newValue);\n        validateInput(e, type, newValue);\n        showValidButton(2);\n    }\n\n    const validateInput = (e, type, newValue) => {\n        const { target: el } = e;\n        let isValid = false;\n        \n        // Switch when becomes valid\n        isValid = validateInputValue(type, newValue);\n\n        // Add/Remove valid check mark on valid/invalid elements\n        showValidationInput(el, isValid); \n    }\n\n    const showValidationInput = (el, isValid) => {\n        if(isValid === true) {\n            el.classList.remove(classes.error);\n            el.previousSibling.lastChild.classList.remove(classes.error);\n            el.nextSibling.classList.add(classes.valid);\n        } else el.nextSibling.classList.remove(classes.valid);\n    }\n\n    const showValidButton = validInputs => {\n        const allValidEl = Array.from(formEl.current.querySelectorAll('input + span')).filter(e => e.classList.value.indexOf('valid') > 0).length;\n        const formButtonClasses = submitButton.current.classList;\n\n        if(allValidEl === validInputs) { \n            formButtonClasses.add(classes.valid);\n            submitButton.current.disabled = false;\n        } else {\n            formButtonClasses.remove(classes.valid);\n            submitButton.current.disabled = true;\n        }\n    }\n\n    const updateInputState = (type, newValue) => {\n        const newEl = { type, val: newValue };\n        switch (type) {\n            case 'username':\n                return setUsername(newEl);\n            case 'password':\n                return setPassword(newEl);\n            default:\n                return console.log(`Failed to update state for ${type}!`);\n        }\n    }\n\n    const handleSwitchPage = (path) => {\n        history.push(`/${path}`, { from: '/login' });\n    }\n\n    let animation = '';\n\n    if(props.location.state && (props.location.state.from === '/register' || props.location.state.from === '/recover')) animation = 'animated flipInX';\n        else animation = 'animated fadeInUp';\n  \n    let { from } = props.location.state || { from: { pathname: '/' } };\n    if(from === '/register') from = { pathname: '/' };\n    if (redirectToReferrer === true) return <Redirect to={from} />;\n    if (auth.username !== undefined) return <Redirect to={{ pathname: '/' }} />;\n    if(from && from.pathname === '/profile' && !infoShown ) {\n        toastr.info('You need to login too see the profile page');\n        setInfoShown(true);\n    }\n  \n    return (\n      <div className={classes.Wrapper}>\n        <div className={animation}>\n            <form onSubmit={handleSubmit} ref={formEl} className={classes['auth-main']}>\n                <h3 className={classes['page-name']}>Login</h3>\n                <div className={classes['form-control']}>\n                    <label htmlFor=\"username\">Username or email <span>minimum 6 characters</span></label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        autoComplete=\"off\"\n                        value={username.val}\n                        onChange={handleChange}\n                        onKeyPress={(e) => !(/^[a-zA-Z0-9_.-@]*$/g.test(e.key)) ? e.preventDefault() : undefined}\n                        maxLength=\"50\"\n                        placeholder=\"Enter username...\"\n                    />\n                    <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                    <label htmlFor=\"password\">Password <span>minimum 6 characters</span></label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        value={password.val}\n                        onChange={handleChange}\n                        placeholder=\"Enter password...\"\n                    />\n                    <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                </div>\n                <button type=\"submit\" disabled={true} className={classes.btn} ref={submitButton}>{loadingButton ? <ClipLoader size={13} color={'#485877'} /> : 'Login'}</button>\n                <div className={classes['auth-switch-page']} onClick={() => handleSwitchPage('register')}> Don't have an account yet? Sign up here</div> \n                <div className={classes['auth-switch-page']} onClick={() => handleSwitchPage('recover')}>Forgot your account OR need to resend activation email? </div> \n            </form>\n        </div>\n      </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../helpers/auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      auth.isAuthenticated === true\n        ? <Component {...props} />\n        : <Redirect to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }} />\n    )} />\n)\n\nexport default PrivateRoute;","import React from 'react';\n\nconst Home = () => <h3>Home</h3>\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport auth, { checkAuth } from '../../helpers/auth';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport classes from './Profile.module.css';\n\nconst Profile = props => {\n    const history = useHistory();\n\n    const [loggedUser, setLoggedUser] = useState(null);\n    \n    useEffect(() => {\n        const fetchAuth = async() => {\n            if(localStorage.getItem('userToken') === null) return history.push('/login', { from: { pathname: history.location.pathname } });\n                else {\n                    const token = localStorage.getItem('userToken');\n                    const res = await checkAuth(token);\n                    if(res.status === 1) {\n                        auth.authenticate(res.username);\n                        setLoggedUser({ username: res.username }); \n                    } else return history.push('/login', { from: { pathname: history.location.pathname } });\n                }\n        }\n\n        fetchAuth();\n    }, [history]);\n    \n    if(loggedUser === null) return <div className={classes.Loading}><ClipLoader size={50} color={'#485877'} /></div>;\n    \n    return(\n        <div>Hello {loggedUser.username}</div>\n    );\n}\n\nexport default Profile;\n","import React, { useState, useRef } from 'react';\nimport auth, { register } from '../../helpers/auth';\nimport classes from '../../styles/Auth.module.css';\nimport { validateForm, validateInputValue } from '../../helpers/validation';\nimport '../../styles/toastr.css';\nimport toastr from 'toastr';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { Redirect } from 'react-router-dom';\n\nconst Register = props => {\n  const formEl = useRef(null);\n  const submitButton = useRef(null);\n  const { history } = props;\n\n  const [email, setEmail] = useState({ type: 'email', val: '' });\n  const [username, setUsername] = useState({ type: 'username', val: '' });\n  const [password, setPassword] = useState({ type: 'password', val: '' });\n  const [rePassword, setRePassword] = useState({ type: 'password', val: '' });\n  const [loadingButton, setLoadingButton] = useState(false);\n\n  const handleSubmit = async(e) => {\n      e.preventDefault();\n      let areThereErrors = false;\n\n      submitButton.current.disabled = true;\n      setLoadingButton(true);\n      areThereErrors = await handleRegistration(e);\n      submitButton.current.disabled = false;\n      setLoadingButton(false);\n\n      if(!areThereErrors) {\n        toastr.success('Please check your email to activate your account!', 'Your account has been created!', );\n        history.push('/login', { from: '/register', username });\n      }\n  }\n\n  const handleRegistration = async(e) => {\n    const isFormValid = validateForm([username, password, email], e.target);\n    if(!isRepeatPasswordValid()) return true;\n    if(isFormValid) {\n        const res = await register(username, password, email, rePassword);\n        if(res.status === 1) return false;\n            else {\n                handleServerErrors(res);\n                return true;\n        } \n    } else return true;\n  }\n\n  const handleServerErrors = res => {\n      if(res.code === 11) showServerErrors(res.invalids, res); // REGISTRATION / LOGIN - Validation failed!\n          else if(res.code === 12) showServerErrors(['username', 'email'], res);  // REGISTRATION - Both email and username are already used!\n          else if(res.code === 13 || res.code === 15) showServerErrors(['username'], res); // REGISTRATION - Username is already used! ---- LOGIN - Incorrect username!\n          else if(res.code === 14) showServerErrors(['email'], res); // REGISTRATION - Email is already used!\n          else if(res.code === 16) showServerErrors(['password'], res); // LOGIN - Incorrect pass!\n          else if(res.code === 10) showServerErrors(['password', 'rePassword'], res); // REGISTER - Passwords do not match!\n          else if(res.code === 9) showServerErrors(['email'], res); // REGISTER - Your email is not valid!\n          else showServerErrors([], res); // REGISTER/LOGIN - General server error - Something went wrong!\n  }\n\n  const showServerErrors = (invalidInputs, res) => {\n      if( invalidInputs.length === 0 ) return toastr.error('Please try again!', 'Something went wrong!'); // ADD TOASTR FOR GENERAL ERROR - SMTH WENT WRONG\n      invalidInputs.forEach(el => {\n          const element = formEl.current.querySelector(`#${el}`);\n          element.classList.add(classes.error);\n          element.previousSibling.lastChild.classList.add(classes.error);\n      });\n\n      // Adding messages to toastr\n      if(res.hasOwnProperty('invalids')) toastr.error(`${capitalize(invalidInputs.join(', '))} are not valid!`);\n        else toastr.error(capitalize(res.message));\n  }\n\n  const capitalize = name => {\n      return name.charAt(0).toUpperCase() + name.slice(1);\n  }\n\n  const handleChange = e => {\n      const { name: type, value: newValue } = e.target;\n      updateInputState(type, newValue);\n      validateInput(e, type, newValue);\n      showValidButton(4);\n  }\n\n  const validateInput = (e, type, newValue) => {\n      const { target: el } = e;\n      let isValid = false;\n      \n      // Switch when becomes valid\n      if(type !== 'rePassword') {\n        isValid = validateInputValue(type, newValue);\n        if(type === 'password') byPassValidationForPasswords(isValid, newValue);\n      } else isValid = (password.val === newValue && newValue !== '' && newValue.length > 5) ? true : false;\n\n      // Add/Remove valid check mark on valid/invalid elements\n      showValidationInput(el, isValid); \n  }\n\n  const byPassValidationForPasswords = (isValid, pass) => {\n    const { val: rePass } = rePassword;\n    if(isValid && rePass.length > 0) {\n        if(rePass !== pass ) formEl.current.querySelector('#rePassword').nextSibling.classList.remove(classes.valid);\n            else formEl.current.querySelector('#rePassword').nextSibling.classList.add(classes.valid);\n    } else if(!isValid && rePass.length > 0) \n        formEl.current.querySelector('#rePassword').nextSibling.classList.remove(classes.valid);\n  }\n\n  const isRepeatPasswordValid = () => {\n      if(password.val !== rePassword.val || rePassword.val === '' || rePassword.val < 6) {\n          const rePassInput = formEl.current.querySelector('#rePassword');\n          rePassInput.classList.add(classes.error);\n          rePassInput.previousSibling.lastChild.classList.add(classes.error);\n          return false;\n      }\n      return true;\n  }\n\n  const showValidationInput = (el, isValid) => {\n      if(isValid === true) {\n          el.classList.remove(classes.error);\n          el.previousSibling.lastChild.classList.remove(classes.error);\n          el.nextSibling.classList.add(classes.valid);\n      } else el.nextSibling.classList.remove(classes.valid);\n  }\n\n  const showValidButton = validInputs => {\n      const allValidEl = Array.from(formEl.current.querySelectorAll('input + span')).filter(e => e.classList.value.indexOf('valid') > 0).length;\n      const formButtonClasses = submitButton.current.classList;\n\n      if(allValidEl === validInputs) { \n          formButtonClasses.add(classes.valid);\n          submitButton.current.disabled = false;\n      } else {\n          formButtonClasses.remove(classes.valid);\n          submitButton.current.disabled = true;\n      }\n  }\n\n  const updateInputState = (type, newValue) => {\n      const newEl = { type, val: newValue };\n      switch (type) {\n          case 'username':\n              return setUsername(newEl);\n          case 'password':\n              return setPassword(newEl);\n          case 'rePassword':\n            return setRePassword({ type: 'password', val: newValue });\n          case 'email':\n            return setEmail(newEl);\n          default:\n              return console.log(`Failed to update state for ${type}!`);\n      }\n  }\n\n  const handleSwitchPage = (path) => {\n      history.push(`/${path}`, { from: '/register' });\n  }\n\n  let animation = '';\n\n  if(props.location.state && props.location.state.from === '/login') animation = 'animated flipInY';\n    else animation = 'animated fadeInUp';\n\n  if (auth.username !== undefined) return <Redirect to={{ pathname: '/' }} />;\n\n  return (\n    <div className={classes.Wrapper}>\n      <div className={animation}>\n          <form onSubmit={handleSubmit} ref={formEl} className={classes['auth-main']}>\n              <h3 className={classes['page-name']}>Register</h3>\n              <div className={classes['form-control']}>\n                <label htmlFor=\"username\">Username <span>minimum 6 characters</span></label>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    autoComplete=\"off\"\n                    value={username.val}\n                    onChange={handleChange}\n                    onKeyPress={(e) => !(/^[aA-zZ0-9-]+$/g.test(e.key)) ? e.preventDefault() : undefined}\n                    maxLength=\"50\"\n                    placeholder=\"Enter username...\"\n                />\n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                <label htmlFor=\"email\">Email <span>e.g. joe@smith.com</span></label>\n                <input\n                    type=\"text\"\n                    name=\"email\"\n                    id=\"email\"\n                    autoComplete=\"off\"\n                    value={email.val}\n                    onChange={handleChange}\n                    placeholder=\"Enter email...\"\n                    \n                /> \n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                <label htmlFor=\"password\">Password <span>minimum 6 characters</span></label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={password.val}\n                    onChange={handleChange}\n                    placeholder=\"Enter password...\"\n                />\n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                <label htmlFor=\"rePassword\"> Confirm Password <span>same as password above</span></label>\n                <input\n                    type=\"password\"\n                    name=\"rePassword\"\n                    id=\"rePassword\"\n                    value={rePassword.val}\n                    onChange={handleChange}\n                    placeholder=\"Enter password...\"\n                /> \n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n              </div>\n              <button type=\"submit\" disabled={true} className={classes.btn} ref={submitButton}>{loadingButton ? <ClipLoader size={13} color={'#485877'} /> : 'Register'}</button>\n              <div className={classes['auth-switch-page'] + ' ' + classes['register']} onClick={() => handleSwitchPage('login')}>Already have an account? Sign in here</div> \n          </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Register;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (\n        <div className={classes.Navbar}>\n          <div><Link to=\"/\">Home</Link></div>\n          <div><Link to=\"/profile\">Profile</Link></div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport auth from '../../../helpers/auth';\nimport classes from './AuthStatus.module.css';\n\nconst AuthStatus = withRouter(({ history }) => {\n  let component = null;\n\n  const handleSignOut = () => {\n    auth.signout();\n    localStorage.removeItem('userToken');\n    history.push('/');\n  }\n\n  if(auth.isAuthenticated) {\n    const width = window.innerWidth || document.documentElement.clientWidth|| document.body.clientWidth;\n    const userUsername = width <= 510 ? '' : `Welcome ${auth.username}!`;\n    component = \n      <div className={classes['sign-in']}>\n        { userUsername } <button onClick={handleSignOut}><i className=\"fas fa-sign-out-alt\"></i> Sign out</button>\n      </div>;\n  } else {\n    component = \n      <div className={classes['sign-out']}>\n        <button onClick={() => history.push('/register')}>Sign up</button>\n        <button onClick={() => history.push('/login')}><i className=\"fas fa-sign-in-alt\"></i> Login</button>\n      </div>;\n  }\n\n  return (\n    <div className={classes.AuthStatus}>{component}</div>\n  )\n})\n\nexport default AuthStatus;","import React from 'react';\nimport Navbar from './Navbar/Navbar';\nimport AuthStatus from './AuthStatus/AuthStatus';\nimport classes from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <div className={classes.Header}>\n            <Navbar />\n            <AuthStatus /> \n        </div>\n    )\n}\n\nexport default Header;\n\n","const toastrSettings = {\n    \"closeButton\": true,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": false,\n    \"positionClass\": \"toast-bottom-right\",\n    \"preventDuplicates\": true,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"3000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n    // \"closeButton\": false,\n    // \"debug\": false,\n    // \"newestOnTop\": false,\n    // \"progressBar\": false,\n    // \"positionClass\": \"toast-bottom-right\",\n    // \"preventDuplicates\": false,\n    // \"onclick\": null,\n    // \"showDuration\": \"300\",\n    // \"hideDuration\": \"1000\",\n    // \"timeOut\": 0,\n    // \"extendedTimeOut\": 0,\n    // \"showEasing\": \"swing\",\n    // \"hideEasing\": \"linear\",\n    // \"showMethod\": \"fadeIn\",\n    // \"hideMethod\": \"fadeOut\",\n    // \"tapToDismiss\": false\n};\n\nexport default toastrSettings;","import React, { useState, useRef } from 'react';\nimport auth, { recoverOrResendValidation } from '../../helpers/auth';\nimport classes from '../../styles/Auth.module.css';\nimport '../../styles/toastr.css';\nimport toastr from 'toastr';\nimport { validateForm, validateInputValue } from '../../helpers/validation';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPassword = props => {\n    const formEl = useRef(null);\n    const submitButton = useRef(null);\n    const { history } = props;\n\n    const [username, setUsername] = useState({ type: 'username', val: '' });\n    const [loadingButton, setLoadingButton] = useState(false);\n  \n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        let areThereErrors = false;\n        \n        submitButton.current.disabled = true;\n        setLoadingButton(true);\n        areThereErrors = await handleRecover(e);\n        submitButton.current.disabled = false;\n        setLoadingButton(false);\n        \n        if(!areThereErrors) {\n            history.push('/login');\n        }\n    }\n\n    const handleRecover = async(e) => {\n        const isFormValid = validateForm([username], e.target);\n        if(isFormValid) {\n            const res = await recoverOrResendValidation(username);\n            if(res.status === 1) {\n                console.log(res)\n                toastr.options.timeOut = '5000';\n                toastr.success('Please follow the email information to complete this action', 'Email was sent successfully!');\n                return false;\n            } else {\n                handleServerErrors(res);\n                return true;\n            } \n        } else return true;\n    }\n\n    const handleServerErrors = res => {\n        if(res.code === 11) showServerErrors(res.invalids, res); // RECOVER - Validation failed!\n            else if(res.code === 15) showServerErrors(['username'], res); // RECOVER - Incorrect email or username!\n            else showServerErrors([], res); // RECOVER - General server error - Something went wrong!\n    }\n\n    const showServerErrors = (invalidInputs, res) => {\n        console.log(res)\n        if( invalidInputs.length === 0 ) return toastr.error('Please try again!', 'Something went wrong!');\n        invalidInputs.forEach(el => {\n            const element = formEl.current.querySelector(`#${el}`);\n            element.classList.add(classes.error);\n            element.previousSibling.lastChild.classList.add(classes.error);\n        });\n\n        // Adding messages to toastr\n        if(res.hasOwnProperty('invalids')) toastr.error(`${capitalize(invalidInputs[0])} is not valid!`);\n            else toastr.error(capitalize(res.message));\n    }\n\n    const capitalize = name => {\n        return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n\n    const handleChange = e => {\n        const { name: type, value: newValue } = e.target;\n        updateInputState(type, newValue);\n        validateInput(e, type, newValue);\n        showValidButton(1);\n    }\n\n    const validateInput = (e, type, newValue) => {\n        const { target: el } = e;\n        let isValid = false;\n        \n        // Switch when becomes valid\n        isValid = validateInputValue(type, newValue);\n\n        // Add/Remove valid check mark on valid/invalid elements\n        showValidationInput(el, isValid); \n    }\n\n    const showValidationInput = (el, isValid) => {\n        if(isValid === true) {\n            el.classList.remove(classes.error);\n            el.previousSibling.lastChild.classList.remove(classes.error);\n            el.nextSibling.classList.add(classes.valid);\n        } else el.nextSibling.classList.remove(classes.valid);\n    }\n\n    const showValidButton = validInputs => {\n        const allValidEl = Array.from(formEl.current.querySelectorAll('input + span')).filter(e => e.classList.value.indexOf('valid') > 0).length;\n        const formButtonClasses = submitButton.current.classList;\n\n        if(allValidEl === validInputs) { \n            formButtonClasses.add(classes.valid);\n            submitButton.current.disabled = false;\n        } else {\n            formButtonClasses.remove(classes.valid);\n            submitButton.current.disabled = true;\n        }\n    }\n\n    const updateInputState = (type, newValue) => {\n        const newEl = { type, val: newValue };\n        switch (type) {\n            case 'username':\n                return setUsername(newEl);\n            default:\n                return console.log(`Failed to update state for ${type}!`);\n        }\n    }\n\n    const handleSwitchPage = (path) => {\n        history.push(`/${path}`, { from: '/recover' });\n    }\n\n    let animation = '';\n\n    if(props.location.state && props.location.state.from === '/login') animation = 'animated flipInY';\n        else animation = 'animated fadeInUp';\n\n    if (auth.username !== undefined) return <Redirect to={{ pathname: '/' }} />;\n\n    return (\n      <div className={classes.Wrapper}>\n        <div className={animation}>\n            <form onSubmit={handleSubmit} ref={formEl} className={classes['auth-main']}>\n                <h3 className={classes['page-name'] + ' ' + classes['recover']}>Recover account or resend activation email</h3>\n                <div className={classes['form-control']}>\n                    <label htmlFor=\"username\">Email or username <span>minimum 6 characters</span></label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        autoComplete=\"off\"\n                        value={username.val}\n                        onChange={handleChange}\n                        onKeyPress={(e) => !(/^[a-zA-Z0-9_.-@]*$/g.test(e.key)) ? e.preventDefault() : undefined}\n                        maxLength=\"50\"\n                        placeholder=\"Your email or username...\"\n                    />\n                    <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                </div>\n                <button type=\"submit\" disabled={true} className={classes.btn} ref={submitButton}>{loadingButton ? <ClipLoader size={13} color={'#485877'} /> : 'Send email'}</button>\n                <div className={classes['auth-switch-page']} onClick={() => handleSwitchPage('login')}>Remember your account now? Go back to login</div> \n            </form>\n        </div>\n      </div>\n    )\n}\n\nexport default ForgotPassword;","import React, { useState, useRef, useEffect } from 'react';\nimport auth, { changePassword } from '../../helpers/auth';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport classes from '../../styles/Auth.module.css';\nimport { validateForm, validateInputValue } from '../../helpers/validation';\nimport '../../styles/toastr.css';\nimport toastr from 'toastr';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { Redirect } from 'react-router-dom';\n\nconst ChangePassword = () => {\n  const formEl = useRef(null);\n  const submitButton = useRef(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const [password, setPassword] = useState({ type: 'password', val: '' });\n  const [rePassword, setRePassword] = useState({ type: 'password', val: '' });\n  const [loadingButton, setLoadingButton] = useState(false);\n  const [userToHandle, setUserToHandle] = useState(null);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const id = searchParams.get('id'); \n    const key = searchParams.get('key'); \n    if(id && key) setUserToHandle({ id, key});\n        else history.push('/login');\n  }, [history, location]);\n\n  const handleSubmit = async(e) => {\n      e.preventDefault();\n      let areThereErrors = false;\n\n      submitButton.current.disabled = true;\n      setLoadingButton(true);\n      areThereErrors = await handleRegistration(e);\n      submitButton.current.disabled = false;\n      setLoadingButton(false);\n\n      if(!areThereErrors) {\n        toastr.success('You can login now with your new password!', 'Your password has been changed!', );\n        history.push('/login');\n      }\n  }\n\n  const handleRegistration = async(e) => {\n    const isFormValid = validateForm([password], e.target);\n    if(!isRepeatPasswordValid()) return true;\n    if(isFormValid) {\n        const res = await changePassword(password, rePassword, userToHandle);\n        console.log(res)\n        if(res.status === 1) return false;\n            else {\n                handleServerErrors(res);\n                return true;\n        } \n    } else return true;\n  }\n\n  const handleServerErrors = res => {\n      if(res.code === 11) showServerErrors(res.invalids, res); // CHANGE PASSWORD - Validation failed!\n          else if(res.code === 10) showServerErrors(['password', 'rePassword'], res); // CHANGE PASSWORD - Passwords do not match!\n          else showServerErrors([], res); // CHANGE PASSWORD- General server error - Something went wrong!\n  }\n\n  const showServerErrors = (invalidInputs, res) => {\n      if( invalidInputs.length === 0 ) return toastr.error('Please try again!', 'Something went wrong!'); // ADD TOASTR FOR GENERAL ERROR - SMTH WENT WRONG\n      invalidInputs.forEach(el => {\n          const element = formEl.current.querySelector(`#${el}`);\n          element.classList.add(classes.error);\n          element.previousSibling.lastChild.classList.add(classes.error);\n      });\n\n      // Adding messages to toastr\n      if(res.hasOwnProperty('invalids')) toastr.error(`${capitalize(invalidInputs.join(', '))} are not valid!`);\n        else toastr.error(capitalize(res.message));\n  }\n\n  const capitalize = name => {\n      return name.charAt(0).toUpperCase() + name.slice(1);\n  }\n\n  const handleChange = e => {\n      const { name: type, value: newValue } = e.target;\n      updateInputState(type, newValue);\n      validateInput(e, type, newValue);\n      showValidButton(2);\n  }\n\n  const validateInput = (e, type, newValue) => {\n      const { target: el } = e;\n      let isValid = false;\n      \n      // Switch when becomes valid\n      if(type !== 'rePassword') {\n        isValid = validateInputValue(type, newValue);\n        if(type === 'password') byPassValidationForPasswords(isValid, newValue);\n      } else isValid = (password.val === newValue && newValue !== '' && newValue.length > 5) ? true : false;\n\n      // Add/Remove valid check mark on valid/invalid elements\n      showValidationInput(el, isValid); \n  }\n\n  const byPassValidationForPasswords = (isValid, pass) => {\n    const { val: rePass } = rePassword;\n    if(isValid && rePass.length > 0) {\n        if(rePass !== pass ) formEl.current.querySelector('#rePassword').nextSibling.classList.remove(classes.valid);\n            else formEl.current.querySelector('#rePassword').nextSibling.classList.add(classes.valid);\n    } else if(!isValid && rePass.length > 0) \n        formEl.current.querySelector('#rePassword').nextSibling.classList.remove(classes.valid);\n  }\n\n  const isRepeatPasswordValid = () => {\n      if(password.val !== rePassword.val || rePassword.val === '' || rePassword.val < 6) {\n          const rePassInput = formEl.current.querySelector('#rePassword');\n          rePassInput.classList.add(classes.error);\n          rePassInput.previousSibling.lastChild.classList.add(classes.error);\n          return false;\n      }\n      return true;\n  }\n\n  const showValidationInput = (el, isValid) => {\n      if(isValid === true) {\n          el.classList.remove(classes.error);\n          el.previousSibling.lastChild.classList.remove(classes.error);\n          el.nextSibling.classList.add(classes.valid);\n      } else el.nextSibling.classList.remove(classes.valid);\n  }\n\n  const showValidButton = validInputs => {\n      const allValidEl = Array.from(formEl.current.querySelectorAll('input + span')).filter(e => e.classList.value.indexOf('valid') > 0).length;\n      const formButtonClasses = submitButton.current.classList;\n\n      if(allValidEl === validInputs) { \n          formButtonClasses.add(classes.valid);\n          submitButton.current.disabled = false;\n      } else {\n          formButtonClasses.remove(classes.valid);\n          submitButton.current.disabled = true;\n      }\n  }\n\n  const updateInputState = (type, newValue) => {\n      const newEl = { type, val: newValue };\n      switch (type) {\n          case 'password':\n              return setPassword(newEl);\n          case 'rePassword':\n            return setRePassword({ type: 'password', val: newValue });\n          default:\n              return console.log(`Failed to update state for ${type}!`);\n      }\n  }\n\n  const handleSwitchPage = (path) => {\n      history.push(`/${path}`);\n  }\n\n  let animation = 'animated fadeInUp';\n\n  if (auth.username !== undefined) return <Redirect to={{ pathname: '/' }} />;\n\n  return (\n    <div className={classes.Wrapper}>\n      <div className={animation}>\n          <form onSubmit={handleSubmit} ref={formEl} className={classes['auth-main']}>\n              <h3 className={classes['page-name']}>Change password</h3>\n              <div className={classes['form-control']}>\n                <label htmlFor=\"password\"> New Password <span>minimum 6 characters</span></label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={password.val}\n                    onChange={handleChange}\n                    placeholder=\"Enter password...\"\n                />\n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n                <label htmlFor=\"rePassword\"> Confirm New Password <span>same as password above</span></label>\n                <input\n                    type=\"password\"\n                    name=\"rePassword\"\n                    id=\"rePassword\"\n                    value={rePassword.val}\n                    onChange={handleChange}\n                    placeholder=\"Enter password...\"\n                /> \n                <span className={classes['verification']}><i className=\"fas fa-check\"></i></span>\n              </div>\n              <button type=\"submit\" disabled={true} className={classes.btn} ref={submitButton}>{loadingButton ? <ClipLoader size={13} color={'#485877'} /> : 'Change password'}</button>\n              <div className={classes['auth-switch-page'] + ' ' + classes['register']} onClick={() => handleSwitchPage('login')}>Remember your password? Sign in here</div> \n          </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Home from './pages/Home/Home';\nimport Profile from './pages/Profile/Profile';\nimport Register from './components/Register/Register';\nimport Header from './components/Header/Header';\nimport './App.css';\nimport toastr from 'toastr';\nimport toastrSetup from './helpers/toastrSettings';\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword';\nimport ChangePassword from './components/ChangePassword/ChangePassword';\nimport auth, { checkAuth } from './helpers/auth';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst App = () => {\n  toastr.options = toastrSetup;\n\n  const [loggedUser, setLoggedUser] = useState(null);\n\n  useEffect(() => {\n      const fetchAuth = async() => {\n          if(localStorage.getItem('userToken') === null) return setLoggedUser({ username: 'Guest' });\n              else {\n                  const token = localStorage.getItem('userToken');\n                  const res = await checkAuth(token);\n                  if(res.status === 1) {\n                      auth.authenticate(res.username);\n                      setLoggedUser({ username: res.username }); \n                  } else setLoggedUser({ username: 'Guest' }); \n              }\n      }\n      fetchAuth();\n  }, []);\n\n  if(loggedUser === null) return <div className=\"loading\"><ClipLoader size={50} color={'#485877'} /></div>;\n\n  return (\n    <Router>\n      <div>\n        <Header/>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/recover\" component={ForgotPassword} />\n        <Route path=\"/changepass\" component={ChangePassword} />\n        <PrivateRoute path='/profile' component={Profile} />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthStatus\":\"AuthStatus_AuthStatus__2ZlMy\",\"sign-out\":\"AuthStatus_sign-out__3IVfl\",\"sign-in\":\"AuthStatus_sign-in__2SD58\"};"],"sourceRoot":""}